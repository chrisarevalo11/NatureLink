{
  "address": "0x713f2Ed660a0711A32a333606Fe60Ca4f1bc3030",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xbd0744d7e7831bb909a199d0262bdb451fa08f23accea70f97b32a4176e75049",
  "receipt": {
    "to": null,
    "from": "0xD96B642Ca70edB30e58248689CEaFc6E36785d68",
    "contractAddress": "0x713f2Ed660a0711A32a333606Fe60Ca4f1bc3030",
    "transactionIndex": 2,
    "gasUsed": "271917",
    "logsBloom": "0x
    "blockHash": "0x2a890361cffc2bdc2ebd373003546a35da101d4bcd635dc34cb281ff972dfd6e",
    "transactionHash": "0xbd0744d7e7831bb909a199d0262bdb451fa08f23accea70f97b32a4176e75049",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 43413737,
        "transactionHash": "0xbd0744d7e7831bb909a199d0262bdb451fa08f23accea70f97b32a4176e75049",
        "address": "0x713f2Ed660a0711A32a333606Fe60Ca4f1bc3030",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000d96b642ca70edb30e58248689ceafc6e36785d68"
        ],
        "data": "0x",
        "logIndex": 5,
        "blockHash": "0x2a890361cffc2bdc2ebd373003546a35da101d4bcd635dc34cb281ff972dfd6e"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 43413737,
        "transactionHash": "0xbd0744d7e7831bb909a199d0262bdb451fa08f23accea70f97b32a4176e75049",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000d96b642ca70edb30e58248689ceafc6e36785d68",
          "0x000000000000000000000000f903ba9e006193c1527bfbe65fe2123704ea3f99"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000009a91219b0d75d000000000000000000000000000000000000000000000000039c4b69a8536f4900000000000000000000000000000000000000000000124976398d6408f5dd900000000000000000000000000000000000000000000000000392a2578ea297ec0000000000000000000000000000000000000000000012497643367622a6b4ed",
        "logIndex": 6,
        "blockHash": "0x2a890361cffc2bdc2ebd373003546a35da101d4bcd635dc34cb281ff972dfd6e"
      }
    ],
    "blockNumber": 43413737,
    "cumulativeGasUsed": "369413",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "59c451c9e9863bbc52952911526fb962",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Treasury.sol\":\"Treasury\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Treasury.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport '@openzeppelin/contracts/access/Ownable.sol';\\n\\ncontract Treasury is Ownable {\\n\\tconstructor() {}\\n\\n\\t// ************************ //\\n\\t// *       Treasury       * //\\n\\t// ************************ //\\n\\n\\treceive() external payable {}\\n\\n\\tfunction withdraw() external onlyOwner {\\n\\t\\trequire(address(this).balance > 0, 'withdraw: no funds to withdraw');\\n\\n\\t\\t(bool success, ) = msg.sender.call{value: address(this).balance}('');\\n\\t\\trequire(success, 'withdraw: failed to send Ether');\\n\\t}\\n\\n\\t// ************************ //\\n\\t// *  Getters y Setters   * //\\n\\t// ************************ //\\n\\n\\tfunction getBalance() public view returns (uint) {\\n\\t\\treturn address(this).balance;\\n\\t}\\n}\\n\",\"keccak256\":\"0x2f0bd61c623a19fc64e07b77917908c2b97d8512e2d694cc40a88686e96f94d0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6103808061007e6000396000f3fe60806040526004361061004e5760003560e01c806312065fe01461005a5780633ccfd60b1461007a578063715018a6146100915780638da5cb5b146100a6578063f2fde38b146100ce57600080fd5b3661005557005b600080fd5b34801561006657600080fd5b506040514781526020015b60405180910390f35b34801561008657600080fd5b5061008f6100ee565b005b34801561009d57600080fd5b5061008f6101e6565b3480156100b257600080fd5b506000546040516001600160a01b039091168152602001610071565b3480156100da57600080fd5b5061008f6100e936600461031a565b6101fa565b6100f6610270565b6000471161014b5760405162461bcd60e51b815260206004820152601e60248201527f77697468647261773a206e6f2066756e647320746f207769746864726177000060448201526064015b60405180910390fd5b604051600090339047908381818185875af1925050503d806000811461018d576040519150601f19603f3d011682016040523d82523d6000602084013e610192565b606091505b50509050806101e35760405162461bcd60e51b815260206004820152601e60248201527f77697468647261773a206661696c656420746f2073656e6420457468657200006044820152606401610142565b50565b6101ee610270565b6101f860006102ca565b565b610202610270565b6001600160a01b0381166102675760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610142565b6101e3816102ca565b6000546001600160a01b031633146101f85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610142565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561032c57600080fd5b81356001600160a01b038116811461034357600080fd5b939250505056fea264697066735822122086897e25ea21fc2d79cd70540183a312d5365382dd665a2a223a640d11fcfedb64736f6c63430008140033",
  "deployedBytecode": "0x60806040526004361061004e5760003560e01c806312065fe01461005a5780633ccfd60b1461007a578063715018a6146100915780638da5cb5b146100a6578063f2fde38b146100ce57600080fd5b3661005557005b600080fd5b34801561006657600080fd5b506040514781526020015b60405180910390f35b34801561008657600080fd5b5061008f6100ee565b005b34801561009d57600080fd5b5061008f6101e6565b3480156100b257600080fd5b506000546040516001600160a01b039091168152602001610071565b3480156100da57600080fd5b5061008f6100e936600461031a565b6101fa565b6100f6610270565b6000471161014b5760405162461bcd60e51b815260206004820152601e60248201527f77697468647261773a206e6f2066756e647320746f207769746864726177000060448201526064015b60405180910390fd5b604051600090339047908381818185875af1925050503d806000811461018d576040519150601f19603f3d011682016040523d82523d6000602084013e610192565b606091505b50509050806101e35760405162461bcd60e51b815260206004820152601e60248201527f77697468647261773a206661696c656420746f2073656e6420457468657200006044820152606401610142565b50565b6101ee610270565b6101f860006102ca565b565b610202610270565b6001600160a01b0381166102675760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610142565b6101e3816102ca565b6000546001600160a01b031633146101f85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610142565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561032c57600080fd5b81356001600160a01b038116811461034357600080fd5b939250505056fea264697066735822122086897e25ea21fc2d79cd70540183a312d5365382dd665a2a223a640d11fcfedb64736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 359,
        "contract": "contracts/Treasury.sol:Treasury",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}