/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "VRFCoordinatorV2Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRFCoordinatorV2Interface__factory>;
    getContractFactory(
      name: "ConfirmedOwner",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ConfirmedOwner__factory>;
    getContractFactory(
      name: "ConfirmedOwnerWithProposal",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ConfirmedOwnerWithProposal__factory>;
    getContractFactory(
      name: "IOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOwnable__factory>;
    getContractFactory(
      name: "VRFConsumerBaseV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRFConsumerBaseV2__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "ERC1155Supply",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Supply__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "Crowdfunding",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Crowdfunding__factory>;
    getContractFactory(
      name: "Evaluation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Evaluation__factory>;
    getContractFactory(
      name: "Hypercerts",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Hypercerts__factory>;
    getContractFactory(
      name: "ICrowdfunding",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICrowdfunding__factory>;
    getContractFactory(
      name: "IEvaluation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEvaluation__factory>;
    getContractFactory(
      name: "IHypercerts",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHypercerts__factory>;
    getContractFactory(
      name: "INLRead",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INLRead__factory>;
    getContractFactory(
      name: "IPUSHCommInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPUSHCommInterface__factory>;
    getContractFactory(
      name: "IVRFv2Consumer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVRFv2Consumer__factory>;
    getContractFactory(
      name: "VRFv2ConsumerMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRFv2ConsumerMock__factory>;
    getContractFactory(
      name: "NatureLink",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NatureLink__factory>;
    getContractFactory(
      name: "NLRead",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NLRead__factory>;
    getContractFactory(
      name: "Treasury",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Treasury__factory>;
    getContractFactory(
      name: "VRFv2Consumer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VRFv2Consumer__factory>;

    getContractAt(
      name: "VRFCoordinatorV2Interface",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VRFCoordinatorV2Interface>;
    getContractAt(
      name: "ConfirmedOwner",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ConfirmedOwner>;
    getContractAt(
      name: "ConfirmedOwnerWithProposal",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ConfirmedOwnerWithProposal>;
    getContractAt(
      name: "IOwnable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IOwnable>;
    getContractAt(
      name: "VRFConsumerBaseV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VRFConsumerBaseV2>;
    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "ERC1155Supply",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Supply>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "Crowdfunding",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Crowdfunding>;
    getContractAt(
      name: "Evaluation",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Evaluation>;
    getContractAt(
      name: "Hypercerts",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Hypercerts>;
    getContractAt(
      name: "ICrowdfunding",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ICrowdfunding>;
    getContractAt(
      name: "IEvaluation",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IEvaluation>;
    getContractAt(
      name: "IHypercerts",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IHypercerts>;
    getContractAt(
      name: "INLRead",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.INLRead>;
    getContractAt(
      name: "IPUSHCommInterface",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPUSHCommInterface>;
    getContractAt(
      name: "IVRFv2Consumer",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IVRFv2Consumer>;
    getContractAt(
      name: "VRFv2ConsumerMock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VRFv2ConsumerMock>;
    getContractAt(
      name: "NatureLink",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.NatureLink>;
    getContractAt(
      name: "NLRead",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.NLRead>;
    getContractAt(
      name: "Treasury",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Treasury>;
    getContractAt(
      name: "VRFv2Consumer",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VRFv2Consumer>;

    deployContract(
      name: "VRFCoordinatorV2Interface",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VRFCoordinatorV2Interface>;
    deployContract(
      name: "ConfirmedOwner",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ConfirmedOwner>;
    deployContract(
      name: "ConfirmedOwnerWithProposal",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ConfirmedOwnerWithProposal>;
    deployContract(
      name: "IOwnable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOwnable>;
    deployContract(
      name: "VRFConsumerBaseV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VRFConsumerBaseV2>;
    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155>;
    deployContract(
      name: "ERC1155Supply",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Supply>;
    deployContract(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155MetadataURI>;
    deployContract(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155>;
    deployContract(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Receiver>;
    deployContract(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "Crowdfunding",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Crowdfunding>;
    deployContract(
      name: "Evaluation",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Evaluation>;
    deployContract(
      name: "Hypercerts",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Hypercerts>;
    deployContract(
      name: "ICrowdfunding",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ICrowdfunding>;
    deployContract(
      name: "IEvaluation",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEvaluation>;
    deployContract(
      name: "IHypercerts",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IHypercerts>;
    deployContract(
      name: "INLRead",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.INLRead>;
    deployContract(
      name: "IPUSHCommInterface",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPUSHCommInterface>;
    deployContract(
      name: "IVRFv2Consumer",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVRFv2Consumer>;
    deployContract(
      name: "VRFv2ConsumerMock",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VRFv2ConsumerMock>;
    deployContract(
      name: "NatureLink",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.NatureLink>;
    deployContract(
      name: "NLRead",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.NLRead>;
    deployContract(
      name: "Treasury",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Treasury>;
    deployContract(
      name: "VRFv2Consumer",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VRFv2Consumer>;

    deployContract(
      name: "VRFCoordinatorV2Interface",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VRFCoordinatorV2Interface>;
    deployContract(
      name: "ConfirmedOwner",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ConfirmedOwner>;
    deployContract(
      name: "ConfirmedOwnerWithProposal",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ConfirmedOwnerWithProposal>;
    deployContract(
      name: "IOwnable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IOwnable>;
    deployContract(
      name: "VRFConsumerBaseV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VRFConsumerBaseV2>;
    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "ERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155>;
    deployContract(
      name: "ERC1155Supply",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155Supply>;
    deployContract(
      name: "IERC1155MetadataURI",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155MetadataURI>;
    deployContract(
      name: "IERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155>;
    deployContract(
      name: "IERC1155Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Receiver>;
    deployContract(
      name: "ERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "Crowdfunding",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Crowdfunding>;
    deployContract(
      name: "Evaluation",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Evaluation>;
    deployContract(
      name: "Hypercerts",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Hypercerts>;
    deployContract(
      name: "ICrowdfunding",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ICrowdfunding>;
    deployContract(
      name: "IEvaluation",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEvaluation>;
    deployContract(
      name: "IHypercerts",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IHypercerts>;
    deployContract(
      name: "INLRead",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.INLRead>;
    deployContract(
      name: "IPUSHCommInterface",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPUSHCommInterface>;
    deployContract(
      name: "IVRFv2Consumer",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVRFv2Consumer>;
    deployContract(
      name: "VRFv2ConsumerMock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VRFv2ConsumerMock>;
    deployContract(
      name: "NatureLink",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.NatureLink>;
    deployContract(
      name: "NLRead",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.NLRead>;
    deployContract(
      name: "Treasury",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Treasury>;
    deployContract(
      name: "VRFv2Consumer",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VRFv2Consumer>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
