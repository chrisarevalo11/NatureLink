/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  INLRead,
  INLReadInterface,
} from "../../../contracts/interfaces/INLRead";

const _abi = [
  {
    inputs: [],
    name: "getAllProjects",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "projectTime",
            type: "uint256[]",
          },
          {
            internalType: "string",
            name: "info",
            type: "string",
          },
          {
            internalType: "enum status",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "contract Crowdfunding",
            name: "crowdfunding",
            type: "address",
          },
          {
            internalType: "contract Evaluation",
            name: "evaluation",
            type: "address",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
        ],
        internalType: "struct Project[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum status",
        name: "_status",
        type: "uint8",
      },
    ],
    name: "getAllProjectsByStatus",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "projectTime",
            type: "uint256[]",
          },
          {
            internalType: "string",
            name: "info",
            type: "string",
          },
          {
            internalType: "enum status",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "contract Crowdfunding",
            name: "crowdfunding",
            type: "address",
          },
          {
            internalType: "contract Evaluation",
            name: "evaluation",
            type: "address",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
        ],
        internalType: "struct Project[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getAllProjectsByUser",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "projectTime",
            type: "uint256[]",
          },
          {
            internalType: "string",
            name: "info",
            type: "string",
          },
          {
            internalType: "enum status",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "contract Crowdfunding",
            name: "crowdfunding",
            type: "address",
          },
          {
            internalType: "contract Evaluation",
            name: "evaluation",
            type: "address",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
        ],
        internalType: "struct Project[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "enum status",
        name: "_status",
        type: "uint8",
      },
    ],
    name: "getAllProjectsByUserStatus",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "projectTime",
            type: "uint256[]",
          },
          {
            internalType: "string",
            name: "info",
            type: "string",
          },
          {
            internalType: "enum status",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "contract Crowdfunding",
            name: "crowdfunding",
            type: "address",
          },
          {
            internalType: "contract Evaluation",
            name: "evaluation",
            type: "address",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
        ],
        internalType: "struct Project[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_projectId",
        type: "uint256",
      },
    ],
    name: "getProjectByUser",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "projectTime",
            type: "uint256[]",
          },
          {
            internalType: "string",
            name: "info",
            type: "string",
          },
          {
            internalType: "enum status",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "contract Crowdfunding",
            name: "crowdfunding",
            type: "address",
          },
          {
            internalType: "contract Evaluation",
            name: "evaluation",
            type: "address",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
        ],
        internalType: "struct Project",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class INLRead__factory {
  static readonly abi = _abi;
  static createInterface(): INLReadInterface {
    return new Interface(_abi) as INLReadInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): INLRead {
    return new Contract(address, _abi, runner) as unknown as INLRead;
  }
}
