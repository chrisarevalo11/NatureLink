/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IEvaluation,
  IEvaluationInterface,
} from "../../../contracts/interfaces/IEvaluation";

const _abi = [
  {
    inputs: [],
    name: "selectEvaluators",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_selectedEvaluators",
        type: "address[]",
      },
    ],
    name: "setSelectedEvaluators",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IEvaluation__factory {
  static readonly abi = _abi;
  static createInterface(): IEvaluationInterface {
    return new Interface(_abi) as IEvaluationInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IEvaluation {
    return new Contract(address, _abi, runner) as unknown as IEvaluation;
  }
}
