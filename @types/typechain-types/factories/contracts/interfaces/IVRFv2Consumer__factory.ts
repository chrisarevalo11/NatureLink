/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IVRFv2Consumer,
  IVRFv2ConsumerInterface,
} from "../../../contracts/interfaces/IVRFv2Consumer";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_numWords",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_evaluatorContract",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_evaluators",
        type: "address[]",
      },
    ],
    name: "requestRandomWords",
    outputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_evaluator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_permitted",
        type: "bool",
      },
    ],
    name: "setPermittedEvaluator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IVRFv2Consumer__factory {
  static readonly abi = _abi;
  static createInterface(): IVRFv2ConsumerInterface {
    return new Interface(_abi) as IVRFv2ConsumerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IVRFv2Consumer {
    return new Contract(address, _abi, runner) as unknown as IVRFv2Consumer;
  }
}
