/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { NLRead, NLReadInterface } from "../../contracts/NLRead";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "projectTime",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "string",
        name: "info",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "status",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "crowdfunding",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "evaluation",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "ProjectCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "enum status",
        name: "_status",
        type: "uint8",
      },
    ],
    name: "getAllProjectsByStatus",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "projectTime",
            type: "uint256[]",
          },
          {
            internalType: "string",
            name: "info",
            type: "string",
          },
          {
            internalType: "enum status",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "contract Crowdfunding",
            name: "crowdfunding",
            type: "address",
          },
          {
            internalType: "contract Evaluation",
            name: "evaluation",
            type: "address",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
        ],
        internalType: "struct NLRead.Project[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getAllProjectsByUser",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "projectTime",
            type: "uint256[]",
          },
          {
            internalType: "string",
            name: "info",
            type: "string",
          },
          {
            internalType: "enum status",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "contract Crowdfunding",
            name: "crowdfunding",
            type: "address",
          },
          {
            internalType: "contract Evaluation",
            name: "evaluation",
            type: "address",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
        ],
        internalType: "struct NLRead.Project[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "enum status",
        name: "_status",
        type: "uint8",
      },
    ],
    name: "getAllProjectsByUserStatus",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "projectTime",
            type: "uint256[]",
          },
          {
            internalType: "string",
            name: "info",
            type: "string",
          },
          {
            internalType: "enum status",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "contract Crowdfunding",
            name: "crowdfunding",
            type: "address",
          },
          {
            internalType: "contract Evaluation",
            name: "evaluation",
            type: "address",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
        ],
        internalType: "struct NLRead.Project[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_projectId",
        type: "uint256",
      },
    ],
    name: "getProjectByUser",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "projectTime",
            type: "uint256[]",
          },
          {
            internalType: "string",
            name: "info",
            type: "string",
          },
          {
            internalType: "enum status",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "contract Crowdfunding",
            name: "crowdfunding",
            type: "address",
          },
          {
            internalType: "contract Evaluation",
            name: "evaluation",
            type: "address",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
        ],
        internalType: "struct NLRead.Project",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUsers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hypercerts",
    outputs: [
      {
        internalType: "contract IHypercerts",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isUser",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "portfolios",
    outputs: [
      {
        internalType: "uint256",
        name: "projectIdCounter",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pushComm",
    outputs: [
      {
        internalType: "contract IPUSHCommInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vrfConsumer",
    outputs: [
      {
        internalType: "contract IVRFv2Consumer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type NLReadConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NLReadConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NLRead__factory extends ContractFactory {
  constructor(...args: NLReadConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      NLRead & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NLRead__factory {
    return super.connect(runner) as NLRead__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NLReadInterface {
    return new Interface(_abi) as NLReadInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): NLRead {
    return new Contract(address, _abi, runner) as unknown as NLRead;
  }
}
