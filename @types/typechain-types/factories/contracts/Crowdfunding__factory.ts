/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  Crowdfunding,
  CrowdfundingInterface,
} from "../../contracts/Crowdfunding";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_bounty",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_creator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_treasuryAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_hypercertsAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pushCommAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_info",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bounty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "evaluation",
    outputs: [
      {
        internalType: "contract IEvaluation",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMissingAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hypercerts",
    outputs: [
      {
        internalType: "contract IHypercerts",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "info",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isContributor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "openForStake",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "openForWithdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pushComm",
    outputs: [
      {
        internalType: "contract IPUSHCommInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refundAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_evaluation",
        type: "address",
      },
    ],
    name: "setEvaluation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "threshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timeLeft",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenIdCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526000805461ffff60a01b1916600160a01b1790553480156200002557600080fd5b5060405162001d9b38038062001d9b833981016040819052620000489162000251565b6200005333620001ce565b60008911620000cf5760405162461bcd60e51b815260206004820152603660248201527f636f6e7374727563746f7243726f776466756e64696e673a20616d6f756e742060448201527f6d7573742062652067726561746572207468616e20300000000000000000000060648201526084015b60405180910390fd5b428611620001525760405162461bcd60e51b815260206004820152604360248201527f636f6e7374727563746f7243726f776466756e64696e673a20646561646c696e60448201527f65206d7573742062652067726561746572207468616e2063757272656e742074606482015262696d6560e81b608482015260a401620000c6565b6002899055600388905560048790556001869055600980546001600160a01b038088166001600160a01b031992831617909255600a8054878416908316179055600680548684169083161790556008805492851692909116919091179055600c620001be82826200042b565b50505050505050505050620004f7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200023657600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60008060008060008060008060006101208a8c0312156200027157600080fd5b8951985060208a0151975060408a0151965060608a015195506200029860808b016200021e565b9450620002a860a08b016200021e565b9350620002b860c08b016200021e565b9250620002c860e08b016200021e565b6101008b01519092506001600160401b0380821115620002e757600080fd5b818c0191508c601f830112620002fc57600080fd5b8151818111156200031157620003116200023b565b604051601f8201601f19908116603f011681019083821181831017156200033c576200033c6200023b565b816040528281528f60208487010111156200035657600080fd5b600093505b828410156200037e5760208486010151602085830101526020840193506200035b565b60006020848301015280955050505050509295985092959850929598565b600181811c90821680620003b157607f821691505b602082108103620003d257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200042657600081815260208120601f850160051c81016020861015620004015750805b601f850160051c820191505b8181101562000422578281556001016200040d565b5050505b505050565b81516001600160401b038111156200044757620004476200023b565b6200045f816200045884546200039c565b84620003d8565b602080601f8311600181146200049757600084156200047e5750858301515b600019600386901b1c1916600185901b17855562000422565b600085815260208120601f198616915b82811015620004c857888601518255948401946001909101908401620004a7565b5085821015620004e75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61189480620005076000396000f3fe6080604052600436106101c65760003560e01c80636b1a91ee116100f7578063bc197c8111610095578063ddca3f4311610064578063ddca3f431461051e578063f23a6e6114610534578063f2fde38b1461057a578063fd5e6dd11461059a57600080fd5b8063bc197c8114610468578063bc61495b146104c9578063bfb29f37146104e9578063c5f956af146104fe57600080fd5b80638da5cb5b116100d15780638da5cb5b146103fd578063943dfef11461041b5780639876a6431461043157806398bdf6f51461045257600080fd5b80636b1a91ee146103a7578063715018a6146103c85780637af9e158146103dd57600080fd5b80632af5c919116101645780633a4b66f11161013e5780633a4b66f11461035457806342cde4e81461035c5780635c321ea814610372578063614619541461039257600080fd5b80632af5c919146102fd578063370158ea1461031d57806338e771ab1461033f57600080fd5b80631300a6d1116101a05780631300a6d1146102755780631d0d35f51461028a57806327e235e3146102ba57806329dcb0cf146102e757600080fd5b806301ffc9a7146101da57806302d05d3f1461022057806312065fe01461025857600080fd5b366101d5576101d36105ba565b005b600080fd5b3480156101e657600080fd5b5061020b6101f536600461130a565b6001600160e01b031916630271189760e51b1490565b60405190151581526020015b60405180910390f35b34801561022c57600080fd5b50600954610240906001600160a01b031681565b6040516001600160a01b039091168152602001610217565b34801561026457600080fd5b50475b604051908152602001610217565b34801561028157600080fd5b50610267610868565b34801561029657600080fd5b5061020b6102a536600461134b565b600e6020526000908152604090205460ff1681565b3480156102c657600080fd5b506102676102d536600461134b565b600d6020526000908152604090205481565b3480156102f357600080fd5b5061026760015481565b34801561030957600080fd5b50600754610240906001600160a01b031681565b34801561032957600080fd5b5061033261088d565b60405161021791906113ac565b34801561034b57600080fd5b506101d361091b565b6101d36105ba565b34801561036857600080fd5b5061026760025481565b34801561037e57600080fd5b50600654610240906001600160a01b031681565b34801561039e57600080fd5b506101d3610aca565b3480156103b357600080fd5b5060005461020b90600160a01b900460ff1681565b3480156103d457600080fd5b506101d3611135565b3480156103e957600080fd5b506102406103f836600461134b565b611149565b34801561040957600080fd5b506000546001600160a01b0316610240565b34801561042757600080fd5b5061026760035481565b34801561043d57600080fd5b5060005461020b90600160a81b900460ff1681565b34801561045e57600080fd5b5061026760055481565b34801561047457600080fd5b506104b061048336600461144d565b7fbc197c819b3e337a6f9652dd10becd7eef83032af3b9d958d3d42f669414662198975050505050505050565b6040516001600160e01b03199091168152602001610217565b3480156104d557600080fd5b50600854610240906001600160a01b031681565b3480156104f557600080fd5b50610267611178565b34801561050a57600080fd5b50600a54610240906001600160a01b031681565b34801561052a57600080fd5b5061026760045481565b34801561054057600080fd5b506104b061054f366004611508565b7ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf979695505050505050565b34801561058657600080fd5b506101d361059536600461134b565b611188565b3480156105a657600080fd5b506102406105b5366004611580565b6111fe565b6009546001600160a01b031633036106195760405162461bcd60e51b815260206004820152601f60248201527f7374616b653a207468652063726561746f722063616e6e6f74207374616b650060448201526064015b60405180910390fd5b600054600160a01b900460ff166106725760405162461bcd60e51b815260206004820152601b60248201527f7374616b653a20746865207374616b657220697320636c6f73656400000000006044820152606401610610565b60015442106106c35760405162461bcd60e51b815260206004820152601d60248201527f7374616b653a20746865207374616b652074696d65206973206f7665720000006044820152606401610610565b600034116107265760405162461bcd60e51b815260206004820152602a60248201527f7374616b653a207374616b6520616d6f756e74206d75737420626520677265616044820152690746572207468616e20360b41b6064820152608401610610565b6002544711156107785760405162461bcd60e51b815260206004820152601d60248201527f7374616b653a20657863656564656420746865207468726573686f6c640000006044820152606401610610565b6002544703610796576000805461ffff60a01b1916600160a81b1790555b336000908152600e602052604090205460ff1661080a57336000818152600e60205260408120805460ff19166001908117909155600b805491820181559091527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546001600160a01b03191690911790555b336000908152600d6020526040812080543492906108299084906115af565b9091555050604080513381523460208201527febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a910160405180910390a1565b6000600154421015610887574260015461088291906115c8565b905090565b50600090565b600c805461089a906115db565b80601f01602080910402602001604051908101604052809291908181526020018280546108c6906115db565b80156109135780601f106108e857610100808354040283529160200191610913565b820191906000526020600020905b8154815290600101906020018083116108f657829003601f168201915b505050505081565b60025447106109775760405162461bcd60e51b815260206004820152602260248201527f43726f776466756e64696e673a204e6f20726566756e647320617661696c61626044820152616c6560f01b6064820152608401610610565b60005b600b54811015610ac7576000600b828154811061099957610999611615565b60009182526020808320909101546001600160a01b0316808352600d9091526040909120549091508015610ab2576001600160a01b0382166000818152600d60205260408082208290555190919083908381818185875af1925050503d8060008114610a21576040519150601f19603f3d011682016040523d82523d6000602084013e610a26565b606091505b5050905080610a6e5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b6044820152606401610610565b604080516001600160a01b0385168152602081018490527f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364910160405180910390a1505b50508080610abf9061162b565b91505061097a565b50565b6009546001600160a01b03163314610b335760405162461bcd60e51b815260206004820152602660248201527f6f6e6c7943726561746f723a2063616c6c6572206973206e6f742074686520636044820152653932b0ba37b960d11b6064820152608401610610565b600054600160a81b900460ff16610b8c5760405162461bcd60e51b815260206004820152601f60248201527f657865637574653a2074686520776974686472617720697320636c6f736564006044820152606401610610565b600154421015610bea5760405162461bcd60e51b8152602060048201526024808201527f657865637574653a2074686520646561646c696e6520686173206e6f742070616044820152631cdcd95960e21b6064820152608401610610565b6002544714610c4b5760405162461bcd60e51b815260206004820152602760248201527f657865637574653a20746865207468726573686f6c6420686173206e6f74206260448201526619595b881b595d60ca1b6064820152608401610610565b6007546040805163e141480d60e01b815290516000926001600160a01b03169163e141480d916004808301926020929190829003018187875af1158015610c96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cba9190611644565b905080610d155760405162461bcd60e51b8152602060048201526024808201527f657865637574653a206661696c656420746f2073656c656374206576616c7561604482015263746f727360e01b6064820152608401610610565b600b5460009067ffffffffffffffff811115610d3357610d33611666565b604051908082528060200260200182016040528015610d5c578160200160208202803683370190505b50905060005b600b54811015610dd6576000600b8281548110610d8157610d81611615565b60009182526020822001546001600160a01b03169150610da082611228565b905080848481518110610db557610db5611615565b60200260200101818152505050508080610dce9061162b565b915050610d62565b50600654600554604080516000808252602082019283905263c1341c4f60e01b90925290926001600160a01b03169163c1341c4f91610e1f913091606490600c6024820161167c565b6020604051808303816000875af1158015610e3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e62919061175a565b600580549192506000610e748361162b565b90915550506006546040805160008152602081019182905263864c1cd960e01b9091526001600160a01b039091169063864c1cd990610ebf903090600b908690889060248101611773565b600060405180830381600087803b158015610ed957600080fd5b505af1158015610eed573d6000803e3d6000fd5b5050600a54600454604051600094506001600160a01b039092169250908381818185875af1925050503d8060008114610f42576040519150601f19603f3d011682016040523d82523d6000602084013e610f47565b606091505b5050905080610faa5760405162461bcd60e51b815260206004820152602960248201527f657865637574653a206661696c656420746f2073656e6420657468657220746f60448201526820747265617375727960b81b6064820152608401610610565b6000600454600354610fbc91906115c8565b6007546040519192506000916001600160a01b039091169083908381818185875af1925050503d806000811461100e576040519150601f19603f3d011682016040523d82523d6000602084013e611013565b606091505b50509050806110785760405162461bcd60e51b815260206004820152602b60248201527f657865637574653a206661696c656420746f2073656e6420657468657220746f60448201526a1032bb30b63ab0ba34b7b760a91b6064820152608401610610565b604051600090339047908381818185875af1925050503d80600081146110ba576040519150601f19603f3d011682016040523d82523d6000602084013e6110bf565b606091505b505090508061111f5760405162461bcd60e51b815260206004820152602660248201527f657865637574653a206661696c656420746f2073656e6420657468657220746f6044820152651037bbb732b960d11b6064820152608401610610565b50506000805460ff60a81b191690555050505050565b61113d611260565b61114760006112ba565b565b6000611153611260565b50600780546001600160a01b0319166001600160a01b0383169081179091555b919050565b60004760025461088291906115c8565b611190611260565b6001600160a01b0381166111f55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610610565b610ac7816112ba565b600b818154811061120e57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0381166000908152600d602052604081205460025461124f826064611825565b611259919061183c565b9392505050565b6000546001600160a01b031633146111475760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610610565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561131c57600080fd5b81356001600160e01b03198116811461125957600080fd5b80356001600160a01b038116811461117357600080fd5b60006020828403121561135d57600080fd5b61125982611334565b6000815180845260005b8181101561138c57602081850181015186830182015201611370565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006112596020830184611366565b60008083601f8401126113d157600080fd5b50813567ffffffffffffffff8111156113e957600080fd5b6020830191508360208260051b850101111561140457600080fd5b9250929050565b60008083601f84011261141d57600080fd5b50813567ffffffffffffffff81111561143557600080fd5b60208301915083602082850101111561140457600080fd5b60008060008060008060008060a0898b03121561146957600080fd5b61147289611334565b975061148060208a01611334565b9650604089013567ffffffffffffffff8082111561149d57600080fd5b6114a98c838d016113bf565b909850965060608b01359150808211156114c257600080fd5b6114ce8c838d016113bf565b909650945060808b01359150808211156114e757600080fd5b506114f48b828c0161140b565b999c989b5096995094979396929594505050565b60008060008060008060a0878903121561152157600080fd5b61152a87611334565b955061153860208801611334565b94506040870135935060608701359250608087013567ffffffffffffffff81111561156257600080fd5b61156e89828a0161140b565b979a9699509497509295939492505050565b60006020828403121561159257600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156115c2576115c2611599565b92915050565b818103818111156115c2576115c2611599565b600181811c908216806115ef57607f821691505b60208210810361160f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60006001820161163d5761163d611599565b5060010190565b60006020828403121561165657600080fd5b8151801515811461125957600080fd5b634e487b7160e01b600052604160045260246000fd5b60018060a01b038616815260006020868184015285604084015260a060608401526116aa60a0840186611366565b83810360808501528454600090600181811c90808316806116cc57607f831692505b86831081036116e957634e487b7160e01b85526022600452602485fd5b828652602086019550808015611706576001811461171c57611747565b60ff198516875283151560051b87019550611747565b60008b81526020902060005b8581101561174157815489820152908401908901611728565b88019650505b50939d9c50505050505050505050505050565b60006020828403121561176c57600080fd5b5051919050565b600060a0820160018060a01b038089168452602060a08186015282895480855260c0870191508a60005282600020945060005b818110156117c45785548516835260019586019592840192016117a6565b505060408601899052858103606087015287518082529082019350915080870160005b83811015611803578151855293820193908201906001016117e7565b5050505082810360808401526118198185611366565b98975050505050505050565b80820281158282048414176115c2576115c2611599565b60008261185957634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122052210fbe4b65f95231d631fa82b20639bff69e2cb26877d5b6d6a52f9aa5e44564736f6c63430008140033";

type CrowdfundingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrowdfundingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Crowdfunding__factory extends ContractFactory {
  constructor(...args: CrowdfundingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _amount: BigNumberish,
    _bounty: BigNumberish,
    _fee: BigNumberish,
    _deadline: BigNumberish,
    _creator: AddressLike,
    _treasuryAddress: AddressLike,
    _hypercertsAddress: AddressLike,
    _pushCommAddress: AddressLike,
    _info: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _amount,
      _bounty,
      _fee,
      _deadline,
      _creator,
      _treasuryAddress,
      _hypercertsAddress,
      _pushCommAddress,
      _info,
      overrides || {}
    );
  }
  override deploy(
    _amount: BigNumberish,
    _bounty: BigNumberish,
    _fee: BigNumberish,
    _deadline: BigNumberish,
    _creator: AddressLike,
    _treasuryAddress: AddressLike,
    _hypercertsAddress: AddressLike,
    _pushCommAddress: AddressLike,
    _info: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _amount,
      _bounty,
      _fee,
      _deadline,
      _creator,
      _treasuryAddress,
      _hypercertsAddress,
      _pushCommAddress,
      _info,
      overrides || {}
    ) as Promise<
      Crowdfunding & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Crowdfunding__factory {
    return super.connect(runner) as Crowdfunding__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrowdfundingInterface {
    return new Interface(_abi) as CrowdfundingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Crowdfunding {
    return new Contract(address, _abi, runner) as unknown as Crowdfunding;
  }
}
